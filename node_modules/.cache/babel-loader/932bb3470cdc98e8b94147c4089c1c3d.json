{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriana\\\\Desktop\\\\Miguelangel\\\\carpeta adicional\\\\Curse React\\\\basic-react\\\\src\\\\component\\\\data.json.js\";\nimport React, { Component } from 'react';\nexport default class Datajson extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.valid = () => {\n      this.state.posts.forEach(element => {\n        const int = () => element.find(element <= 10); //var html = `<ul><li>${element}</li></ul>`;\n        //html;\n\n\n        console.log('interar', e);\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const query = await res.json();\n    console.log(query);\n    this.setState({\n      posts: query\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.posts.forEach(element => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        key: element.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, element.title), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, element.body)));\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Adriana\\Desktop\\Miguelangel\\carpeta adicional\\Curse React\\basic-react\\src\\component\\data.json.js"],"names":["React","Component","Datajson","state","posts","valid","forEach","element","int","find","console","log","e","componentDidMount","res","fetch","query","json","setState","render","id","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5CE,KAF4C,GAEpC;AACJC,MAAAA,KAAK,EAAE;AADH,KAFoC;;AAAA,SAa5CC,KAb4C,GAapC,MAAM;AACV,WAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAAyBC,OAAO,IAAI;AAChC,cAAMC,GAAG,GAAG,MAAOD,OAAO,CAACE,IAAR,CAAcF,OAAO,IAAI,EAAzB,CAAnB,CADgC,CAGnC;AACC;;;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,CAAvB;AACA,OANF;AAOH,KArB2C;AAAA;;AAM5C,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,UAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAKE,QAAL,CAAc;AAACd,MAAAA,KAAK,EAACY;AAAP,KAAd;AACH;;AAYDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKhB,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAAyBC,OAAO,IAAI;AACjC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAI,QAAA,GAAG,EAAIA,OAAO,CAACa,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKb,OAAO,CAACc,KAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKd,OAAO,CAACe,IAAb,CAFJ,CADG,CAAP;AAMF,KAPD,CAFR,CADJ;AAcH;;AAtC2C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Datajson extends Component {\r\n\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n        const query = await res.json();\r\n        console.log(query)\r\n        this.setState({posts:query})\r\n    } \r\n\r\n    valid = () => {\r\n        this.state.posts.forEach(element => {\r\n            const int = () =>  element.find( element <= 10)\r\n\r\n         //var html = `<ul><li>${element}</li></ul>`;\r\n          //html;\r\n          console.log('interar', e)\r\n         })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.posts.forEach(element => {\r\n                       return <div>\r\n                           <ul key = {element.id}>\r\n                               <li>{element.title}</li>\r\n                               <li>{element.body}</li>\r\n                           </ul>\r\n                       </div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}